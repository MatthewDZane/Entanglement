{
  "participants": [
    {
      "name": "Eric Fan"
    },
    {
      "name": "Mehak Mann"
    }
  ],
  "messages": [
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590337878936,
      "content": "Yup, exactly!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590337714770,
      "content": "oh so like, have an array where arr[i] represents the smallest cover upto i nodes??",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590337675567,
      "content": "could you just store childMin in a list you declare at the top?",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590337646170,
      "content": "yeahh that's the part I'm confused on rip",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590337638829,
      "content": "I guess I'm mainly confused on how to compute childMin from previously computed parts because smallest_cover(root.child) is '",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590337628432,
      "content": "Yeah, I think maybe you want to store the recursive step for memoization? i'm honestly still not quite sure I understand how to do that",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590337596161,
      "content": "This looks good to me -- what you said makes sense!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590337406120,
      "content": "somehow still not doing dynamic programming because I'm not storing the recursive step tho",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590337323828,
      "content": "basically for a given root, if it's not contained in the vertex cover you have to add all of it's children right? Because ever edge MUST be covered.\nand then if the root is included, the recursion step is figuring out whether to include the weight of the root's child or the child's smallest_cover?",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590337245013,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/99295062_1710408172416890_8837493152571981824_n_1710408165750224.png",
          "creation_timestamp": 1590337243
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590337241470,
      "content": "hey eric - so maybe smth like this?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336225044,
      "content": "You start from the root and work your way down I think",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336218778,
      "content": "Ah you would have to know the root first right",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590336181418,
      "content": "So how do you know that the subroot v is false before even calculating the root??",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336150813,
      "content": "Is this what you are asking about?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336143117,
      "content": "This is the easier case. By definition of a vertex cover, if v is not in the vertex cover, then all of its children must be in the vertex cover",
      "reactions": [
        {
          "reaction": "\u00f0\u009f\u0091\u008d",
          "actor": "Mehak Mann"
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336126342,
      "content": "One case is the subroot v is false (not in the vertex cover)",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336111673,
      "content": "So we are looking at the root (or rather, subroot)",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590336104270,
      "content": "Yup",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336103781,
      "content": "Haha no worries",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590336099755,
      "content": "Sorry I\u00e2\u0080\u0099m so confused lol",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336099491,
      "content": "You start from the parent right",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590336065507,
      "content": "But in the algorithm - how do you know which one to include? Parent vs child",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336048341,
      "content": "So if it makes sense I would just go with it! :)",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336038574,
      "content": "I think there are a lot of valid implementations",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336029688,
      "content": "I think your algo could also work",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590336023355,
      "content": "I think that could work -- I used a list to keep track of the included and excluded nodes in the cover",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335981589,
      "content": "Should I sort the vertices by degree",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335969340,
      "content": "But I can think of how to structure the algorithm. Should I have a 2D array and keep adding the optimal to both sides idk",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335934567,
      "content": "I basically had a proof and I was able to brush over the minimizing stuff lol (tho thx for the last line haha)",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335915158,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/99350971_652788905452691_3669775788921585664_n_652788772119371.jpg",
          "creation_timestamp": 1590335914
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335910658,
      "content": "Tbh I\u00e2\u0080\u0099m more confused on the algorithm",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335813768,
      "content": "so you want to set OPT(v) = the minimum of OPT(v.child, true), OPT(v.child, false) for all children (you want to sum up the minima) and also add v.weight",
      "reactions": [
        {
          "reaction": "\u00f0\u009f\u0091\u008d",
          "actor": "Mehak Mann"
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335776731,
      "content": "But The minimum",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335768102,
      "content": "Or not plus",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335758311,
      "content": "But okay - you\u00e2\u0080\u0099re saying they OPT(v) = OPT(v.child, true) + OPT(v.child, false)?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335734545,
      "content": "I think it's helpful to think about this one recursively",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335723265,
      "content": "Does the proof make sense?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335717889,
      "content": "I think the algorithm will follow from the proof",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335698538,
      "content": "I don\u00e2\u0080\u0099t even know how that would be translated into an algorithm haha",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335695745,
      "content": "Does that make sense?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335693756,
      "content": "Haha",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335687066,
      "content": "\u00f0\u009f\u0098\u00b3",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335640007,
      "content": "And you know the correct children will be chosen because this is handled by the Inductive Hypothesis",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335622514,
      "content": "So you want to take the minimum of OPT(v.child, true) and OPT(v.child, false) for all children",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335604393,
      "content": "So in the case where v is true (v is in the vertex cover), a child can either be in the vertex cover or not. This will depend on the overall minimum weight",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335559712,
      "content": "I think it will depend on how you define your predicate, but what I had was OPT(v, flag), where v is the vertex we are currently considering, and the flag is true or false, and it represents whether the v is in the vertex cover or not",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335547618,
      "content": "\u00f0\u009f\u0098\u00a9",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335501946,
      "content": "Ah, I was stuck on the same problem",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335450580,
      "content": "for 3, how do we figure out whether it\u00e2\u0080\u0099s optimal to include the parent vs it\u00e2\u0080\u0099s children in a vertex cover?",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590335425841,
      "content": "Hey Eric I\u00e2\u0080\u0099m doing good - okay I actually had a quick question about hw 6 question 3 lo",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1590335308908,
      "content": "Hey Mehak! How's it going?",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1590305337303,
      "content": "Hey Eric",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1587612624648,
      "content": "Np!",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1587606814319,
      "content": "Hey Mehak! No I haven\u00e2\u0080\u0099t yet :/ sorry!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1587599913461,
      "content": "Hey Eric - have u done algos #2??",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1586244379106,
      "content": "Ty! You too Eric",
      "reactions": [
        {
          "reaction": "\u00e2\u009d\u00a4",
          "actor": "Eric Fan"
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1586244373381,
      "content": "Have a good night!",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1586244369944,
      "content": "Will do!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1586244241906,
      "content": "Ayyy okay! Lmk when ur done then \u00f0\u009f\u0098\u008a",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1586244230699,
      "content": "Yeah sure!!!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1586244225085,
      "content": "Ahaha ok no prob - do u want to check once u finish?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1586244212725,
      "content": "I just got started tonight",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1586244208941,
      "content": "Oh wow you\u00e2\u0080\u0099re fast",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1586244165027,
      "content": "I finished algos hw and was wondering if u want to check maybe?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1586244130000,
      "content": "Hey Mehak! Yup I\u00e2\u0080\u0099m in 421!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1586243888004,
      "content": "Hey Eric - are u taking 421?",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583654704359,
      "content": "ah nvm just a math mistake",
      "reactions": [
        {
          "reaction": "\u00f0\u009f\u0091\u008d",
          "actor": "Eric Fan"
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583654599199,
      "content": "ahhh shoot",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583654551328,
      "content": "I may be wrong but we can discuss more tomorrow!",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583654529012,
      "content": "I got 0.4712 and 0.4945",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583654247369,
      "content": "Hey Eric - Did you get something like [0.4631, 0.4747] for 6b?",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211584923,
      "content": "Anytime!!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211554651,
      "content": "Okay! Wow thank you so much Eric \u00f0\u009f\u0098\u008a",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211537713,
      "content": "Besides that, looks good :)",
      "reactions": [
        {
          "reaction": "\u00f0\u009f\u0098\u008d",
          "actor": "Mehak Mann"
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211485416,
      "content": "For 5, 3 significant figures",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211454817,
      "content": "No worries! Check your number for 3 again; it's left-shifted by one digit I believe",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211356515,
      "content": "Okay that\u00e2\u0080\u0099s all - I think my third image was a repeat",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211348249,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/88416880_204431387309278_7875685546469621760_n_204431377309279.jpg",
          "creation_timestamp": 1583211347
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211345713,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/89436827_283472049284065_9176669945457541120_n_283472035950733.jpg",
          "creation_timestamp": 1583211345
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211343283,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/88183279_248687812803069_4937397938516131840_n_248687799469737.jpg",
          "creation_timestamp": 1583211342
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211319794,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/88044049_805510746525887_6438142752499695616_n_805510739859221.jpg",
          "creation_timestamp": 1583211319
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211300575,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/89331162_213428089806062_5669230683235549184_n_245676883104143.jpg",
          "creation_timestamp": 1583211300
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211257796,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/88194187_877981129326759_7546497022153457664_n_877981122660093.jpg",
          "creation_timestamp": 1583211257
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211255856,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/89331162_213428089806062_5669230683235549184_n_213428063139398.jpg",
          "creation_timestamp": 1583211255
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211230253,
      "content": "Sure, ask away!",
      "reactions": [
        {
          "reaction": "\u00f0\u009f\u0098\u008d",
          "actor": "Mehak Mann"
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211193993,
      "content": "Thanks! Actually can I check the rest of my answers with you lollll",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211148173,
      "content": "Based on what I heard from others",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211138780,
      "content": "Yeah it\u00e2\u0080\u0099s 45",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211131530,
      "content": "Ohhhh is it 45???",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211107283,
      "content": "I made that mistake too",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211101623,
      "content": "For 7b make sure that you have the correct alpha",
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211091695,
      "content": "Ah I got something else for 7b",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211067269,
      "photos": [
        {
          "uri": "messages/inbox/EricFan_NMjNu4Rbnw/photos/88210815_187956135954908_6057594480976986112_n_187956125954909.jpg",
          "creation_timestamp": 1583211066
        }
      ],
      "type": "Generic"
    },
    {
      "sender_name": "Eric Fan",
      "timestamp_ms": 1583211062962,
      "content": "Sure, go ahead!",
      "type": "Generic"
    },
    {
      "sender_name": "Mehak Mann",
      "timestamp_ms": 1583211049857,
      "content": "Heyyy Eric can I check some of my 312 answers with you?",
      "type": "Generic"
    }
  ],
  "title": "Eric Fan",
  "is_still_participant": true,
  "thread_type": "Regular",
  "thread_path": "inbox/EricFan_NMjNu4Rbnw"
}